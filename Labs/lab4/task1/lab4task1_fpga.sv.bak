/*
	Ben Davis
	2/13/24
	EE 371
	Lab 4, Task 1
	
	This is a module that
	
*/

module lab4task1_fpga (
					input logic CLOCK_50,
					input logic [3:0] KEY,
					input logic [9:0] SW,
					output logic [9:0] LEDR,
					output logic [6:0] HEX0);
	
	logic done;
	logic shr;
	logic st;
	logic [3:0] result;
	
	lab4task1_FSM fsm (.clk(CLOCK_50), .reset(~KEY[0]), .start(SW[9]),
											.done(done), .s(st), .shr(shr));
	
	lab4task1_ASM asm (.clk(CLOCK_50), .in(SW[7:0]), .start(st), 
									.shr(shr), .zero(done), .result(result));
									
	assign LEDR[9] = done;
	
	logic [6:0] hexzero;
	
	hexadecimal hx0 (.in(result), .out(hx0));
	
	assign HEX0 = hexzero;
endmodule
//testbench
module lab4task1_fpga_tb ();

	logic CLOCK_50;
	logic [3:0] KEY;
	logic [9:0] SW, LEDR;
	logic [6:0] HEX0;
	
	lab4task1_fpga dut (.CLOCK_50, .KEY, .SW, .LEDR, .HEX0);
	
	parameter clk_pd = 100;
	initial begin 
		CLOCK_50 <= 0;
		forever #(clk_pd /2) CLOCK_50 <= ~CLOCK_50;
	end
	
	initial begin
		KEY[0] <= 0; SW <= 10'b0001101100; @(posedge CLOCK_50);
		KEY[0] <= 1; SW <= 10'b1001101100; @(posedge CLOCK_50);
		KEY[0] <= 1; SW <= 10'b1001101100; @(posedge CLOCK_50);
		KEY[0] <= 1; SW <= 10'b1001101100; @(posedge CLOCK_50);
		KEY[0] <= 1; SW <= 10'b1001101100; @(posedge CLOCK_50);
		KEY[0] <= 1; SW <= 10'b1001101100; @(posedge CLOCK_50);
		KEY[0] <= 1; SW <= 10'b1001101100; @(posedge CLOCK_50);
		KEY[0] <= 1; SW <= 10'b1001101100; @(posedge CLOCK_50);
		KEY[0] <= 1; SW <= 10'b1001101100; @(posedge CLOCK_50);
		KEY[0] <= 1; SW <= 10'b1001101100; @(posedge CLOCK_50);
		KEY[0] <= 1; SW <= 10'b1001101100; @(posedge CLOCK_50);
		$stop;
	end
endmodule //testbench
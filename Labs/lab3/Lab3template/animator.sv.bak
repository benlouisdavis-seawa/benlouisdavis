/*
	Ben Davis
	2/2/24
	EE 371
	Lab 3, Task 2
	
	This is a module that takes in eight inputs. Four of them 
	are for the start and end coordinates of the beginning of
	the animation, and the other four are four the end coordinates
	of the animation. This module is fo task 2, so it has only 
	been programmed to draw a straight line moving.
	
*/

module animator (
		input logic clk, reset,
		input logic [9:0] x0, x1, w0, w1, //all x coordinates
		input logic [8:0] y0, y1, //all y coordinates
		output logic [9:0] a0, a1, //current x coordinates
		output logic [8:0] b0, b1  //current y coordinates
);

	always_ff @(posedge clk) begin
		if (reset) begin
			a0 <= x0;
			a1 <= x1;
			b0 <= y0;
			b1 <= y1;
		end else begin
			//for horizontal line
			if (a0 < w0) begin
				a0 <= a0 + 1;
				a1 <= a1 + 1;
			end
		end
	end //of ff
	
endmodule
//testbench
module animator_testbench();

	logic clk, reset;
	logic [9:0] x0, x1, w0, w1, a0, a1;
	logic [8:0] y0, y1, b0, b1;
	
	animator dut (.clk, .reset, .x0, .x1, .w0, .w1, .y0, .y1,
												.a0, .a1, .b0, .b1);
												
	parameter clk_p = 100;
	initial begin
		forever #(clk_p /2) clk <= ~clk;
	end
	
	initial begin
		reset <= 0; x0 <= 50; x1 <= 100; w0 <= 100; w1 <= 150;
							y0 <= 80; y1 <= 80; @(posedge clk);
													  @(posedge clk);
													  @(posedge clk);
													  @(posedge clk);
													  @(posedge clk);
													  @(posedge clk);
													  @(posedge clk);
		$stop;
	end
endmodule //testbench